{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","defaultProps","TextForm","text","setText","useState","len","setLen","Fragment","heading","value","onChange","event","console","log","target","split","length","showAlert","rows","Onupchange","toUpperCase","Onlowerchange","newText","toLowerCase","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","OnClear","About","data-bs-parent","Alert","alert","class","Footer","prototype","PropTypes","string","isRequired","App","setmode","setAlert","message","setTimeout","BrowserRouter","document","body","style","backgroundColor","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cc5d352e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const divStyle = {                // Text color\r\n        backgroundColor: 'lightblue'   // Background color\r\n      };\r\n    \r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to={'/'}>{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to={'/'}>Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to={'/about'}>{props.aboutText}</Link>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'dark':'light'}</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps ={\r\n    title: \"Set title\",\r\n    aboutText: \" set text\"\r\n}\r\n\r\n\r\n","import React ,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText]=useState('')\r\n    const handelOnchange=(event)=>{\r\n         console.log(\"Onchange\")\r\n         setText(event.target.value);\r\n         setLen(text.split(\" \").length)\r\n        if(text.split(\" \").length-1=== 5){\r\n            props.showAlert(\"Maximum Limit Reached\",\"warning\");\r\n        }\r\n        \r\n    }\r\n    const Onupchange=()=>{\r\n         console.log(\"Uppercase was Clicked\")\r\n        setText(text.toUpperCase())\r\n    }\r\n    const Onlowerchange=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const OnClear=()=>{\r\n        let newText='';\r\n        setText(newText);\r\n        setLen(0);\r\n    }\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n      }\r\n      const[len,setLen]=useState(0);\r\n   \r\n    \r\n    \r\n\r\n  return (\r\n    <>\r\n        <div className=\"container mb-3\" >\r\n        <h2 className={`mb-3 my-4 text-${props.mode==='light'?'dark':'light'}`}>{props.heading}</h2>\r\n        <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handelOnchange} rows=\"5\"></textarea>\r\n        \r\n        \r\n        <button className=\"btn btn-primary mx-2 my-3\" onClick={Onupchange}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2 my-3\" onClick={Onlowerchange}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-warning mx-2 my-3\" onClick={speak}>Speak</button>\r\n        <button className=\"btn btn-danger mx-2 my-3\" onClick={OnClear}>Clear All </button>\r\n        </div>\r\n        \r\n      <div className={`container my-4 text-${props.mode==='light'?'dark':'light'}`}>\r\n      <h2> Your text summary </h2>\r\n        <p>{text.split(\" \").length===1?0:text.split(\" \").length-1} words {text.length-len} characters</p>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.prototype={\r\n    heading: PropTypes.string.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <div className=\"accordion my-3\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                About TextUtils\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                <p>The website provides different text functionalities like converting to upperCase and lowerCase.It also reads the provided text for exact pronounciation of each word.It also gives you the count of letters and words in the provided text.</p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n            </div>\r\n        </div>\r\n     \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <div className=\"fixed-bottom mt-5 my-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center\">\r\n          <div className={`text-${props.mode==='light'?'dark':'light'}`}>&copy; 2024 Your Company. All rights reserved.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import { isFocusable } from \"@testing-library/user-event/dist/utils\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\nimport Footer from \"./components/Footer\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setmode]=useState('light');\n    const toggleMode=()=>{\n      if(mode ==='light'){\n        setmode('dark');\n        document.body.style.backgroundColor='black';\n        showAlert(\"dark mode enabled.\",\"info\")\n      }\n      else{\n        setmode('light');\n        document.body.style.backgroundColor='white';\n        showAlert(\"light mode enabled.\",\"info\")\n\n      }\n    }\n    const[alert,setAlert]=useState(null);\n    const showAlert=(message,type)=>{\n           setAlert({\n            msg: message,\n            type: type\n          }\n           )\n           setTimeout(() => {\n             setAlert(null);\n           }, 3000);\n    }\n  return (\n    <>\n    <BrowserRouter>\n        <Navbar title=\"TextConverter\" mode={mode}  toggleMode={toggleMode} aboutText=\"About\"/>\n        <Alert alert={alert}/>\n        \n         <div className=\"container\" mode={mode}>\n          <Routes>  \n              <Route exact path=\"/about\" element={<About />} />\n          \n              < Route exact path=\"/\" element= {<TextForm heading=\"Enter text to convert\" mode={mode} showAlert={showAlert}/>} /> \n          </Routes>\n          <TextForm heading=\"Enter text to convert\" mode={mode} showAlert={showAlert}/>\n         </div>\n        <Footer mode={mode}/>\n    </BrowserRouter>\n\n    </>\n  );\n}\n\nexport default App;\n// $env:NODE_OPTIONS = \"--openssl-legacy-provider\"","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}